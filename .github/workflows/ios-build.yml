name: iOS Build (iOS 15.1)

on:
  workflow_dispatch:

jobs:
  ios-build:
    runs-on: macos-latest
    
    steps:
    - name: 📥 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: 🔧 Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: mobile/yarn.lock
        
    - name: 📦 의존성 설치
      working-directory: mobile
      run: yarn install --frozen-lockfile
        
    - name: ⚙️ 환경 설정
      working-directory: mobile
      run: |
        echo "APP_ENV=staging" > .env
        echo "API_BASE_URL=https://api.example.com" >> .env
        echo "TIMEOUT=15000" >> .env
        echo "DEBUG_MODE=true" >> .env
        echo "📄 환경 파일 생성 완료:"
        cat .env
        
    - name: 🧹 iOS 캐시 완전 정리
      working-directory: mobile
      run: |
        echo "🗑️ 기존 빌드 파일 정리..."
        rm -rf ios/build
        rm -rf ios/Pods
        rm -rf ios/Podfile.lock
        rm -rf ~/Library/Caches/CocoaPods
        rm -rf ~/Library/Developer/Xcode/DerivedData
        echo "✅ 캐시 정리 완료"
        
    - name: 🍎 CocoaPods 재설치 (iOS 15.0)
      working-directory: mobile
      run: |
        echo "📦 CocoaPods 버전 확인:"
        pod --version
        
        echo "🔧 iOS 배포 타겟: 15.1 (React Native 0.80.2 정확한 요구사항)"
        echo "🔄 CocoaPods 의존성 설치 중..."
        cd ios
        
        # 더 안정적인 설치를 위한 추가 옵션
        pod install --repo-update --clean-install --verbose --deployment
        
    - name: 🏗️ iOS 빌드 (Debug - iOS 15.0+)
      working-directory: mobile
      run: |
        echo "🔍 Xcode 버전:"
        xcodebuild -version
        
        echo "📱 사용 가능한 시뮬레이터:"
        xcrun simctl list devices available | grep -E "(iPhone|iPad)" | head -10
        
        echo "🏗️ iOS 앱 빌드 시작 (iOS 15.1+ 타겟)..."
        xcodebuild -workspace ios/mobile.xcworkspace \
          -scheme mobile \
          -configuration Debug \
          -sdk iphonesimulator \
          -derivedDataPath ios/build \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          IPHONEOS_DEPLOYMENT_TARGET=15.1 \
          clean build \
          | xcpretty || true
          
    - name: 📦 빌드 결과 확인
      working-directory: mobile
      run: |
        echo "📂 빌드 디렉터리 구조:"
        find ios/build -name "*.app" -type d 2>/dev/null || echo "❌ .app 파일을 찾을 수 없습니다"
        
        APP_PATH="ios/build/Build/Products/Debug-iphonesimulator/mobile.app"
        if [ -d "$APP_PATH" ]; then
          echo "✅ iOS 빌드 성공! (iOS 15.1+ 지원)"
          echo "📏 앱 크기: $(du -sh "$APP_PATH" | cut -f1)"
          echo "📄 앱 내용:"
          ls -la "$APP_PATH" | head -10
          
          # Info.plist에서 최소 iOS 버전 확인
          if [ -f "$APP_PATH/Info.plist" ]; then
            echo "📋 앱 정보:"
            /usr/libexec/PlistBuddy -c "Print :MinimumOSVersion" "$APP_PATH/Info.plist" 2>/dev/null || echo "MinimumOSVersion 정보 없음"
          fi
        else
          echo "❌ 빌드 실패 - mobile.app을 찾을 수 없습니다"
          echo "📂 Debug-iphonesimulator 디렉터리 내용:"
          ls -la ios/build/Build/Products/Debug-iphonesimulator/ 2>/dev/null || echo "디렉터리가 존재하지 않습니다"
          exit 1
        fi
        
    - name: 📤 빌드 아티팩트 업로드 (선택사항)
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ios-app-debug-${{ github.run_number }}
        path: mobile/ios/build/Build/Products/Debug-iphonesimulator/mobile.app
        retention-days: 7