name: iOS Build (iOS 15.1)

on:
  workflow_dispatch:

jobs:
  ios-build:
    runs-on: macos-latest
    
    steps:
    - name: 📥 코드 체크아웃
      uses: actions/checkout@v4
      
    - name: 🔧 Node.js 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: mobile/yarn.lock
        
    - name: 📦 의존성 설치
      working-directory: mobile
      run: yarn install --frozen-lockfile
        
    - name: ⚙️ 환경 설정
      working-directory: mobile
      run: |
        echo "APP_ENV=staging" > .env
        echo "API_BASE_URL=https://api.example.com" >> .env
        echo "TIMEOUT=15000" >> .env
        echo "DEBUG_MODE=true" >> .env
        echo "📄 환경 파일 생성 완료:"
        cat .env
        
    - name: 🧹 iOS 캐시 완전 정리
      working-directory: mobile
      run: |
        echo "🗑️ 기존 빌드 파일 정리..."
        rm -rf ios/build
        rm -rf ios/Pods
        rm -rf ios/Podfile.lock
        rm -rf ~/Library/Caches/CocoaPods
        rm -rf ~/Library/Developer/Xcode/DerivedData
        echo "✅ 캐시 정리 완료"
        
    - name: 🍎 CocoaPods 재설치 (iOS 15.1)
      working-directory: mobile
      run: |
        echo "📦 CocoaPods 버전 확인:"
        pod --version
        
        echo "🔧 iOS 배포 타겟: 15.1 (React Native 0.80.2 정확한 요구사항)"
        echo "🔄 CocoaPods 의존성 설치 중..."
        cd ios
        
        # 더 안정적인 설치를 위한 옵션 (배포 모드 비활성화: Podfile 변경사항 반영)
        pod install --repo-update --clean-install --verbose
        
    - name: 🏗️ iOS 빌드 (Release - iOS 15.1+)
      working-directory: mobile
      run: |
        set -euo pipefail
        echo "🔍 Xcode 버전:"
        xcodebuild -version

        echo "📱 사용 가능한 시뮬레이터 (상위 10개):"
        xcrun simctl list devices available | grep -E "(iPhone|iPad)" | head -10 || true

        echo "🏗️ iOS 앱 빌드 시작 (generic iOS Simulator 대상으로 빌드 - Release)..."
        xcodebuild -workspace ios/mobile.xcworkspace \
          -scheme mobile \
          -configuration Release \
          -sdk iphonesimulator \
          -derivedDataPath ios/build \
          -destination 'generic/platform=iOS Simulator' \
          IPHONEOS_DEPLOYMENT_TARGET=15.1 \
          clean build \
          | xcpretty
          
    - name: 📦 빌드 결과 확인
      working-directory: mobile
      run: |
        echo "📂 빌드 결과에서 .app 검색:"
        APP_PATH=$(find ios/build/Build/Products -type d -name "*.app" | head -1 || true)
        if [ -n "$APP_PATH" ] && [ -d "$APP_PATH" ]; then
          echo "✅ iOS 빌드 성공! (iOS 15.1+ 지원)"
          echo "📄 APP_PATH: $APP_PATH"
          echo "📏 앱 크기: $(du -sh "$APP_PATH" | cut -f1)"
          echo "📄 앱 내용:"
          ls -la "$APP_PATH" | head -10
          
          # Info.plist에서 최소 iOS 버전 확인
          if [ -f "$APP_PATH/Info.plist" ]; then
            echo "📋 MinimumOSVersion: $(/usr/libexec/PlistBuddy -c 'Print :MinimumOSVersion' "$APP_PATH/Info.plist" 2>/dev/null || echo 'N/A')"
          fi
        else
          echo "❌ mobile.app을 찾을 수 없습니다. 빌드 로그 상단 단계를 확인하세요."
          echo "📂 Products 디렉터리 구조:"
          find ios/build/Build/Products -maxdepth 3 -type d -print || true
          exit 1
        fi
        
    - name: 📤 빌드 아티팩트 업로드 (선택사항)
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: ios-app-release-${{ github.run_number }}
        path: mobile/ios/build/Build/Products/**/*.app
        retention-days: 7